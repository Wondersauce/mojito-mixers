'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _extends = require('../../../@babel/runtime/helpers/esm/extends.js');
var objectWithoutPropertiesLoose = require('../../../@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js');
var React = require('react');
var PropTypes = require('prop-types');
var clsx_m = require('../../../clsx/dist/clsx.m.js');
require('../../utils/esm/elementAcceptingRef.js');
require('../../utils/esm/elementTypeAcceptingRef.js');
require('react-is');
var HTMLElementType = require('../../utils/esm/HTMLElementType.js');
require('../../utils/esm/ponyfillGlobal.js');
var refType = require('../../utils/esm/refType.js');
require('../../utils/esm/integerPropType.js');
var composeClasses = require('../../utils/esm/composeClasses/composeClasses.js');
var appendOwnerState = require('../utils/appendOwnerState.js');
var MenuUnstyledContext = require('./MenuUnstyledContext.js');
var menuUnstyledClasses = require('./menuUnstyledClasses.js');
var useMenu = require('./useMenu.js');
var PopperUnstyled = require('../PopperUnstyled/PopperUnstyled.js');
var jsxRuntime = require('react/jsx-runtime');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n["default"] = e;
  return Object.freeze(n);
}

var React__namespace = /*#__PURE__*/_interopNamespace(React);
var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);

const _excluded = ["actions", "anchorEl", "children", "className", "component", "components", "componentsProps", "keepMounted", "onClose", "open"];

function getUtilityClasses(ownerState) {
  const {
    open
  } = ownerState;
  const slots = {
    root: ['root', open && 'expanded'],
    listbox: ['listbox', open && 'expanded']
  };
  return composeClasses["default"](slots, menuUnstyledClasses.getMenuUnstyledUtilityClass, {});
}
/**
 *
 * Demos:
 *
 * - [Menu](https://mui.com/base/react-menu/)
 *
 * API:
 *
 * - [MenuUnstyled API](https://mui.com/base/api/menu-unstyled/)
 */


const MenuUnstyled = /*#__PURE__*/React__namespace.forwardRef(function MenuUnstyled(props, forwardedRef) {
  var _componentsProps$list, _componentsProps$list2, _ref, _componentsProps$root, _components$Listbox, _componentsProps$list3;

  const {
    actions,
    anchorEl,
    children,
    className,
    component,
    components = {},
    componentsProps = {},
    keepMounted = false,
    onClose,
    open = false
  } = props,
        other = objectWithoutPropertiesLoose["default"](props, _excluded);

  const {
    registerItem,
    unregisterItem,
    getListboxProps,
    getItemProps,
    getItemState,
    highlightFirstItem,
    highlightLastItem
  } = useMenu["default"]({
    open,
    onClose,
    listboxRef: (_componentsProps$list = componentsProps.listbox) == null ? void 0 : _componentsProps$list.ref,
    listboxId: (_componentsProps$list2 = componentsProps.listbox) == null ? void 0 : _componentsProps$list2.id
  });
  React__namespace.useImperativeHandle(actions, () => ({
    highlightFirstItem,
    highlightLastItem
  }), [highlightFirstItem, highlightLastItem]);

  const ownerState = _extends["default"]({}, props, {
    open
  });

  const classes = getUtilityClasses(ownerState);
  const Popper = (_ref = component != null ? component : components.Root) != null ? _ref : PopperUnstyled["default"];
  const popperProps = appendOwnerState["default"](Popper, _extends["default"]({}, other, {
    anchorEl,
    open,
    keepMounted,
    role: undefined
  }, componentsProps.root, {
    className: clsx_m["default"](classes.root, className, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className)
  }), ownerState);
  const Listbox = (_components$Listbox = components.Listbox) != null ? _components$Listbox : 'ul';
  const listboxProps = appendOwnerState["default"](Listbox, _extends["default"]({}, componentsProps.listbox, getListboxProps(), {
    className: clsx_m["default"](classes.listbox, (_componentsProps$list3 = componentsProps.listbox) == null ? void 0 : _componentsProps$list3.className)
  }), ownerState);
  const contextValue = {
    registerItem,
    unregisterItem,
    getItemState,
    getItemProps,
    open
  };
  return /*#__PURE__*/jsxRuntime.jsx(Popper, _extends["default"]({}, popperProps, {
    ref: forwardedRef,
    children: /*#__PURE__*/jsxRuntime.jsx(Listbox, _extends["default"]({}, listboxProps, {
      children: /*#__PURE__*/jsxRuntime.jsx(MenuUnstyledContext["default"].Provider, {
        value: contextValue,
        children: children
      })
    }))
  }));
});
process.env.NODE_ENV !== "production" ? MenuUnstyled.propTypes
/* remove-proptypes */
= {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------

  /**
   * A ref with imperative actions.
   * It allows to select the first or last menu item.
   */
  actions: refType["default"],

  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   */
  anchorEl: PropTypes__default["default"]
  /* @typescript-to-proptypes-ignore */
  .oneOfType([HTMLElementType["default"], PropTypes__default["default"].object, PropTypes__default["default"].func]),

  /**
   * @ignore
   */
  children: PropTypes__default["default"].node,

  /**
   * @ignore
   */
  className: PropTypes__default["default"].string,

  /**
   * @ignore
   */
  component: PropTypes__default["default"].elementType,

  /**
   * @ignore
   */
  components: PropTypes__default["default"].shape({
    Listbox: PropTypes__default["default"].elementType,
    Root: PropTypes__default["default"].elementType
  }),

  /**
   * @ignore
   */
  componentsProps: PropTypes__default["default"].shape({
    listbox: PropTypes__default["default"].object,
    root: PropTypes__default["default"].object
  }),

  /**
   * Always keep the menu in the DOM.
   * This prop can be useful in SEO situation or when you want to maximize the responsiveness of the Menu.
   *
   * @default false
   */
  keepMounted: PropTypes__default["default"].bool,

  /**
   * Triggered when focus leaves the menu and the menu should close.
   */
  onClose: PropTypes__default["default"].func,

  /**
   * Controls whether the menu is displayed.
   * @default false
   */
  open: PropTypes__default["default"].bool
} : void 0;

exports["default"] = MenuUnstyled;
//# sourceMappingURL=MenuUnstyled.js.map
