'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _extends = require('../../../@babel/runtime/helpers/esm/extends.js');
var isHostComponent = require('./isHostComponent.js');

/**
 * Appends the ownerState object to the props, merging with the existing one if necessary.
 *
 * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node, `ownerState` are not applied.
 * @param existingProps Props of the element.
 * @param ownerState
 */

function appendOwnerState(elementType, existingProps = {}, ownerState) {
  if (isHostComponent["default"](elementType)) {
    return existingProps;
  }

  return _extends["default"]({}, existingProps, {
    ownerState: _extends["default"]({}, existingProps.ownerState, ownerState)
  });
}

exports["default"] = appendOwnerState;
//# sourceMappingURL=appendOwnerState.js.map
