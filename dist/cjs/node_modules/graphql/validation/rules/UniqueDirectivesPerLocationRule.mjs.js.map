{"version":3,"file":"UniqueDirectivesPerLocationRule.mjs.js","sources":["../../../../../../node_modules/graphql/validation/rules/UniqueDirectivesPerLocationRule.mjs"],"sourcesContent":["import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport {\n  isTypeDefinitionNode,\n  isTypeExtensionNode,\n} from '../../language/predicates.mjs';\nimport { specifiedDirectives } from '../../type/directives.mjs';\n\n/**\n * Unique directive names per location\n *\n * A GraphQL document is only valid if all non-repeatable directives at\n * a given location are uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Directives-Are-Unique-Per-Location\n */\nexport function UniqueDirectivesPerLocationRule(context) {\n  const uniqueDirectiveMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    uniqueDirectiveMap[directive.name] = !directive.isRepeatable;\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      uniqueDirectiveMap[def.name.value] = !def.repeatable;\n    }\n  }\n\n  const schemaDirectives = Object.create(null);\n  const typeDirectivesMap = Object.create(null);\n  return {\n    // Many different AST nodes may contain directives. Rather than listing\n    // them all, just listen for entering any node, and check to see if it\n    // defines any directives.\n    enter(node) {\n      if (!('directives' in node) || !node.directives) {\n        return;\n      }\n\n      let seenDirectives;\n\n      if (\n        node.kind === Kind.SCHEMA_DEFINITION ||\n        node.kind === Kind.SCHEMA_EXTENSION\n      ) {\n        seenDirectives = schemaDirectives;\n      } else if (isTypeDefinitionNode(node) || isTypeExtensionNode(node)) {\n        const typeName = node.name.value;\n        seenDirectives = typeDirectivesMap[typeName];\n\n        if (seenDirectives === undefined) {\n          typeDirectivesMap[typeName] = seenDirectives = Object.create(null);\n        }\n      } else {\n        seenDirectives = Object.create(null);\n      }\n\n      for (const directive of node.directives) {\n        const directiveName = directive.name.value;\n\n        if (uniqueDirectiveMap[directiveName]) {\n          if (seenDirectives[directiveName]) {\n            context.reportError(\n              new GraphQLError(\n                `The directive \"@${directiveName}\" can only be used once at this location.`,\n                {\n                  nodes: [seenDirectives[directiveName], directive],\n                },\n              ),\n            );\n          } else {\n            seenDirectives[directiveName] = directive;\n          }\n        }\n      }\n    },\n  };\n}\n"],"names":["specifiedDirectives","Kind","isTypeDefinitionNode","isTypeExtensionNode","GraphQLError"],"mappings":"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"}