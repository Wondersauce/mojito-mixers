'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var GraphQLError = require('../../error/GraphQLError.mjs.js');
var kinds = require('../../language/kinds.mjs.js');
var predicates = require('../../language/predicates.mjs.js');

/**
 * Executable definitions
 *
 * A GraphQL document is only valid for execution if all definitions are either
 * operation or fragment definitions.
 *
 * See https://spec.graphql.org/draft/#sec-Executable-Definitions
 */
function ExecutableDefinitionsRule(context) {
  return {
    Document(node) {
      for (const definition of node.definitions) {
        if (!predicates.isExecutableDefinitionNode(definition)) {
          const defName =
            definition.kind === kinds.Kind.SCHEMA_DEFINITION ||
            definition.kind === kinds.Kind.SCHEMA_EXTENSION
              ? 'schema'
              : '"' + definition.name.value + '"';
          context.reportError(
            new GraphQLError.GraphQLError(`The ${defName} definition is not executable.`, {
              nodes: definition,
            }),
          );
        }
      }

      return false;
    },
  };
}

exports.ExecutableDefinitionsRule = ExecutableDefinitionsRule;
//# sourceMappingURL=ExecutableDefinitionsRule.mjs.js.map
