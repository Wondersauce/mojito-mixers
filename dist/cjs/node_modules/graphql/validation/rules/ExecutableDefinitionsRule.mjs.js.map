{"version":3,"file":"ExecutableDefinitionsRule.mjs.js","sources":["../../../../../../node_modules/graphql/validation/rules/ExecutableDefinitionsRule.mjs"],"sourcesContent":["import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { isExecutableDefinitionNode } from '../../language/predicates.mjs';\n\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n *\n * See https://spec.graphql.org/draft/#sec-Executable-Definitions\n */\nexport function ExecutableDefinitionsRule(context) {\n  return {\n    Document(node) {\n      for (const definition of node.definitions) {\n        if (!isExecutableDefinitionNode(definition)) {\n          const defName =\n            definition.kind === Kind.SCHEMA_DEFINITION ||\n            definition.kind === Kind.SCHEMA_EXTENSION\n              ? 'schema'\n              : '\"' + definition.name.value + '\"';\n          context.reportError(\n            new GraphQLError(`The ${defName} definition is not executable.`, {\n              nodes: definition,\n            }),\n          );\n        }\n      }\n\n      return false;\n    },\n  };\n}\n"],"names":["isExecutableDefinitionNode","Kind","GraphQLError"],"mappings":";;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,yBAAyB,CAAC,OAAO,EAAE;AACnD,EAAE,OAAO;AACT,IAAI,QAAQ,CAAC,IAAI,EAAE;AACnB,MAAM,KAAK,MAAM,UAAU,IAAI,IAAI,CAAC,WAAW,EAAE;AACjD,QAAQ,IAAI,CAACA,qCAA0B,CAAC,UAAU,CAAC,EAAE;AACrD,UAAU,MAAM,OAAO;AACvB,YAAY,UAAU,CAAC,IAAI,KAAKC,UAAI,CAAC,iBAAiB;AACtD,YAAY,UAAU,CAAC,IAAI,KAAKA,UAAI,CAAC,gBAAgB;AACrD,gBAAgB,QAAQ;AACxB,gBAAgB,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;AAClD,UAAU,OAAO,CAAC,WAAW;AAC7B,YAAY,IAAIC,yBAAY,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC,8BAA8B,CAAC,EAAE;AAC7E,cAAc,KAAK,EAAE,UAAU;AAC/B,aAAa,CAAC;AACd,WAAW,CAAC;AACZ,SAAS;AACT,OAAO;AACP;AACA,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL,GAAG,CAAC;AACJ;;;;"}