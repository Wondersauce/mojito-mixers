{"version":3,"file":"NoFragmentCyclesRule.mjs.js","sources":["../../../../../../node_modules/graphql/validation/rules/NoFragmentCyclesRule.mjs"],"sourcesContent":["import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * No fragment cycles\n *\n * The graph of fragment spreads must not form any cycles including spreading itself.\n * Otherwise an operation could infinitely spread or infinitely execute on cycles in the underlying data.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-spreads-must-not-form-cycles\n */\nexport function NoFragmentCyclesRule(context) {\n  // Tracks already visited fragments to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  const visitedFrags = Object.create(null); // Array of AST nodes used to produce meaningful errors\n\n  const spreadPath = []; // Position in the spread path\n\n  const spreadPathIndexByName = Object.create(null);\n  return {\n    OperationDefinition: () => false,\n\n    FragmentDefinition(node) {\n      detectCycleRecursive(node);\n      return false;\n    },\n  }; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(fragment) {\n    if (visitedFrags[fragment.name.value]) {\n      return;\n    }\n\n    const fragmentName = fragment.name.value;\n    visitedFrags[fragmentName] = true;\n    const spreadNodes = context.getFragmentSpreads(fragment.selectionSet);\n\n    if (spreadNodes.length === 0) {\n      return;\n    }\n\n    spreadPathIndexByName[fragmentName] = spreadPath.length;\n\n    for (const spreadNode of spreadNodes) {\n      const spreadName = spreadNode.name.value;\n      const cycleIndex = spreadPathIndexByName[spreadName];\n      spreadPath.push(spreadNode);\n\n      if (cycleIndex === undefined) {\n        const spreadFragment = context.getFragment(spreadName);\n\n        if (spreadFragment) {\n          detectCycleRecursive(spreadFragment);\n        }\n      } else {\n        const cyclePath = spreadPath.slice(cycleIndex);\n        const viaPath = cyclePath\n          .slice(0, -1)\n          .map((s) => '\"' + s.name.value + '\"')\n          .join(', ');\n        context.reportError(\n          new GraphQLError(\n            `Cannot spread fragment \"${spreadName}\" within itself` +\n              (viaPath !== '' ? ` via ${viaPath}.` : '.'),\n            {\n              nodes: cyclePath,\n            },\n          ),\n        );\n      }\n\n      spreadPath.pop();\n    }\n\n    spreadPathIndexByName[fragmentName] = undefined;\n  }\n}\n"],"names":["GraphQLError"],"mappings":";;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,oBAAoB,CAAC,OAAO,EAAE;AAC9C;AACA;AACA,EAAE,MAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC3C;AACA,EAAE,MAAM,UAAU,GAAG,EAAE,CAAC;AACxB;AACA,EAAE,MAAM,qBAAqB,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACpD,EAAE,OAAO;AACT,IAAI,mBAAmB,EAAE,MAAM,KAAK;AACpC;AACA,IAAI,kBAAkB,CAAC,IAAI,EAAE;AAC7B,MAAM,oBAAoB,CAAC,IAAI,CAAC,CAAC;AACjC,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL,GAAG,CAAC;AACJ;AACA;AACA;AACA,EAAE,SAAS,oBAAoB,CAAC,QAAQ,EAAE;AAC1C,IAAI,IAAI,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AAC3C,MAAM,OAAO;AACb,KAAK;AACL;AACA,IAAI,MAAM,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;AAC7C,IAAI,YAAY,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;AACtC,IAAI,MAAM,WAAW,GAAG,OAAO,CAAC,kBAAkB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;AAC1E;AACA,IAAI,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;AAClC,MAAM,OAAO;AACb,KAAK;AACL;AACA,IAAI,qBAAqB,CAAC,YAAY,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC;AAC5D;AACA,IAAI,KAAK,MAAM,UAAU,IAAI,WAAW,EAAE;AAC1C,MAAM,MAAM,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;AAC/C,MAAM,MAAM,UAAU,GAAG,qBAAqB,CAAC,UAAU,CAAC,CAAC;AAC3D,MAAM,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAClC;AACA,MAAM,IAAI,UAAU,KAAK,SAAS,EAAE;AACpC,QAAQ,MAAM,cAAc,GAAG,OAAO,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;AAC/D;AACA,QAAQ,IAAI,cAAc,EAAE;AAC5B,UAAU,oBAAoB,CAAC,cAAc,CAAC,CAAC;AAC/C,SAAS;AACT,OAAO,MAAM;AACb,QAAQ,MAAM,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AACvD,QAAQ,MAAM,OAAO,GAAG,SAAS;AACjC,WAAW,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvB,WAAW,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;AAC/C,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC;AACtB,QAAQ,OAAO,CAAC,WAAW;AAC3B,UAAU,IAAIA,yBAAY;AAC1B,YAAY,CAAC,wBAAwB,EAAE,UAAU,CAAC,eAAe,CAAC;AAClE,eAAe,OAAO,KAAK,EAAE,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AACzD,YAAY;AACZ,cAAc,KAAK,EAAE,SAAS;AAC9B,aAAa;AACb,WAAW;AACX,SAAS,CAAC;AACV,OAAO;AACP;AACA,MAAM,UAAU,CAAC,GAAG,EAAE,CAAC;AACvB,KAAK;AACL;AACA,IAAI,qBAAqB,CAAC,YAAY,CAAC,GAAG,SAAS,CAAC;AACpD,GAAG;AACH;;;;"}