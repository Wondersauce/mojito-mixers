import '../../utilities/globals/index.js';
import '../../../../graphql/version.mjs.js';
import '../../../../graphql/language/ast.mjs.js';
import '../../../../graphql/language/directiveLocation.mjs.js';
import '../../../../graphql/language/kinds.mjs.js';
import '../../../../graphql/language/tokenKind.mjs.js';
import '../../../../graphql/jsutils/instanceOf.mjs.js';
import '../../../../graphql/language/visitor.mjs.js';
import '../../../../graphql/type/directives.mjs.js';
import '../../../../graphql/type/introspection.mjs.js';
import '../../../../graphql/validation/specifiedRules.mjs.js';
import '../../../../graphql/type/scalars.mjs.js';
import '../../../../graphql/validation/rules/KnownTypeNamesRule.mjs.js';
import '../../../../graphql/validation/rules/PossibleTypeExtensionsRule.mjs.js';
import '../../../../graphql/utilities/extendSchema.mjs.js';
import '../../../../graphql/utilities/findBreakingChanges.mjs.js';
import { getOperationName } from '../../utilities/graphql/getFromAST.js';
import '../../utilities/graphql/storeUtils.js';
import '../../utilities/graphql/transform.js';
import '../../utilities/common/mergeDeep.js';
import '../../utilities/observables/Observable.js';
import '../../utilities/observables/Concast.js';
import '../../utilities/common/canUse.js';

function transformOperation(operation) {
    var transformedOperation = {
        variables: operation.variables || {},
        extensions: operation.extensions || {},
        operationName: operation.operationName,
        query: operation.query,
    };
    if (!transformedOperation.operationName) {
        transformedOperation.operationName =
            typeof transformedOperation.query !== 'string'
                ? getOperationName(transformedOperation.query) || undefined
                : '';
    }
    return transformedOperation;
}

export { transformOperation };
//# sourceMappingURL=transformOperation.js.map
