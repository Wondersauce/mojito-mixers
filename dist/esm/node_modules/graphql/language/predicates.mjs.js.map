{"version":3,"file":"predicates.mjs.js","sources":["../../../../../node_modules/graphql/language/predicates.mjs"],"sourcesContent":["import { Kind } from './kinds.mjs';\nexport function isDefinitionNode(node) {\n  return (\n    isExecutableDefinitionNode(node) ||\n    isTypeSystemDefinitionNode(node) ||\n    isTypeSystemExtensionNode(node)\n  );\n}\nexport function isExecutableDefinitionNode(node) {\n  return (\n    node.kind === Kind.OPERATION_DEFINITION ||\n    node.kind === Kind.FRAGMENT_DEFINITION\n  );\n}\nexport function isSelectionNode(node) {\n  return (\n    node.kind === Kind.FIELD ||\n    node.kind === Kind.FRAGMENT_SPREAD ||\n    node.kind === Kind.INLINE_FRAGMENT\n  );\n}\nexport function isValueNode(node) {\n  return (\n    node.kind === Kind.VARIABLE ||\n    node.kind === Kind.INT ||\n    node.kind === Kind.FLOAT ||\n    node.kind === Kind.STRING ||\n    node.kind === Kind.BOOLEAN ||\n    node.kind === Kind.NULL ||\n    node.kind === Kind.ENUM ||\n    node.kind === Kind.LIST ||\n    node.kind === Kind.OBJECT\n  );\n}\nexport function isConstValueNode(node) {\n  return (\n    isValueNode(node) &&\n    (node.kind === Kind.LIST\n      ? node.values.some(isConstValueNode)\n      : node.kind === Kind.OBJECT\n      ? node.fields.some((field) => isConstValueNode(field.value))\n      : node.kind !== Kind.VARIABLE)\n  );\n}\nexport function isTypeNode(node) {\n  return (\n    node.kind === Kind.NAMED_TYPE ||\n    node.kind === Kind.LIST_TYPE ||\n    node.kind === Kind.NON_NULL_TYPE\n  );\n}\nexport function isTypeSystemDefinitionNode(node) {\n  return (\n    node.kind === Kind.SCHEMA_DEFINITION ||\n    isTypeDefinitionNode(node) ||\n    node.kind === Kind.DIRECTIVE_DEFINITION\n  );\n}\nexport function isTypeDefinitionNode(node) {\n  return (\n    node.kind === Kind.SCALAR_TYPE_DEFINITION ||\n    node.kind === Kind.OBJECT_TYPE_DEFINITION ||\n    node.kind === Kind.INTERFACE_TYPE_DEFINITION ||\n    node.kind === Kind.UNION_TYPE_DEFINITION ||\n    node.kind === Kind.ENUM_TYPE_DEFINITION ||\n    node.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION\n  );\n}\nexport function isTypeSystemExtensionNode(node) {\n  return node.kind === Kind.SCHEMA_EXTENSION || isTypeExtensionNode(node);\n}\nexport function isTypeExtensionNode(node) {\n  return (\n    node.kind === Kind.SCALAR_TYPE_EXTENSION ||\n    node.kind === Kind.OBJECT_TYPE_EXTENSION ||\n    node.kind === Kind.INTERFACE_TYPE_EXTENSION ||\n    node.kind === Kind.UNION_TYPE_EXTENSION ||\n    node.kind === Kind.ENUM_TYPE_EXTENSION ||\n    node.kind === Kind.INPUT_OBJECT_TYPE_EXTENSION\n  );\n}\n"],"names":[],"mappings":";;AAQO,SAAS,0BAA0B,CAAC,IAAI,EAAE;AACjD,EAAE;AACF,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,oBAAoB;AAC3C,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,mBAAmB;AAC1C,IAAI;AACJ,CAAC;AAsCM,SAAS,0BAA0B,CAAC,IAAI,EAAE;AACjD,EAAE;AACF,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,iBAAiB;AACxC,IAAI,oBAAoB,CAAC,IAAI,CAAC;AAC9B,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,oBAAoB;AAC3C,IAAI;AACJ,CAAC;AACM,SAAS,oBAAoB,CAAC,IAAI,EAAE;AAC3C,EAAE;AACF,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,sBAAsB;AAC7C,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,sBAAsB;AAC7C,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,yBAAyB;AAChD,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,qBAAqB;AAC5C,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,oBAAoB;AAC3C,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,4BAA4B;AACnD,IAAI;AACJ,CAAC;AACM,SAAS,yBAAyB,CAAC,IAAI,EAAE;AAChD,EAAE,OAAO,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,gBAAgB,IAAI,mBAAmB,CAAC,IAAI,CAAC,CAAC;AAC1E,CAAC;AACM,SAAS,mBAAmB,CAAC,IAAI,EAAE;AAC1C,EAAE;AACF,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,qBAAqB;AAC5C,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,qBAAqB;AAC5C,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,wBAAwB;AAC/C,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,oBAAoB;AAC3C,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,mBAAmB;AAC1C,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,2BAA2B;AAClD,IAAI;AACJ;;;;"}