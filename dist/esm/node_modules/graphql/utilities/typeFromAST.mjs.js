import { Kind } from '../language/kinds.mjs.js';
import { GraphQLNonNull, GraphQLList } from '../type/definition.mjs.js';

function typeFromAST(schema, typeNode) {
  switch (typeNode.kind) {
    case Kind.LIST_TYPE: {
      const innerType = typeFromAST(schema, typeNode.type);
      return innerType && new GraphQLList(innerType);
    }

    case Kind.NON_NULL_TYPE: {
      const innerType = typeFromAST(schema, typeNode.type);
      return innerType && new GraphQLNonNull(innerType);
    }

    case Kind.NAMED_TYPE:
      return schema.getType(typeNode.name.value);
  }
}

export { typeFromAST };
//# sourceMappingURL=typeFromAST.mjs.js.map
