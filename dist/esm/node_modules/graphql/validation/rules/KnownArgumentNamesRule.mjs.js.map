{"version":3,"file":"KnownArgumentNamesRule.mjs.js","sources":["../../../../../../node_modules/graphql/validation/rules/KnownArgumentNamesRule.mjs"],"sourcesContent":["import { didYouMean } from '../../jsutils/didYouMean.mjs';\nimport { suggestionList } from '../../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { specifiedDirectives } from '../../type/directives.mjs';\n\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n *\n * See https://spec.graphql.org/draft/#sec-Argument-Names\n * See https://spec.graphql.org/draft/#sec-Directives-Are-In-Valid-Locations\n */\nexport function KnownArgumentNamesRule(context) {\n  return {\n    // eslint-disable-next-line new-cap\n    ...KnownArgumentNamesOnDirectivesRule(context),\n\n    Argument(argNode) {\n      const argDef = context.getArgument();\n      const fieldDef = context.getFieldDef();\n      const parentType = context.getParentType();\n\n      if (!argDef && fieldDef && parentType) {\n        const argName = argNode.name.value;\n        const knownArgsNames = fieldDef.args.map((arg) => arg.name);\n        const suggestions = suggestionList(argName, knownArgsNames);\n        context.reportError(\n          new GraphQLError(\n            `Unknown argument \"${argName}\" on field \"${parentType.name}.${fieldDef.name}\".` +\n              didYouMean(suggestions),\n            {\n              nodes: argNode,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n/**\n * @internal\n */\n\nexport function KnownArgumentNamesOnDirectivesRule(context) {\n  const directiveArgs = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    directiveArgs[directive.name] = directive.args.map((arg) => arg.name);\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argsNodes =\n        (_def$arguments = def.arguments) !== null && _def$arguments !== void 0\n          ? _def$arguments\n          : [];\n      directiveArgs[def.name.value] = argsNodes.map((arg) => arg.name.value);\n    }\n  }\n\n  return {\n    Directive(directiveNode) {\n      const directiveName = directiveNode.name.value;\n      const knownArgs = directiveArgs[directiveName];\n\n      if (directiveNode.arguments && knownArgs) {\n        for (const argNode of directiveNode.arguments) {\n          const argName = argNode.name.value;\n\n          if (!knownArgs.includes(argName)) {\n            const suggestions = suggestionList(argName, knownArgs);\n            context.reportError(\n              new GraphQLError(\n                `Unknown argument \"${argName}\" on directive \"@${directiveName}\".` +\n                  didYouMean(suggestions),\n                {\n                  nodes: argNode,\n                },\n              ),\n            );\n          }\n        }\n      }\n\n      return false;\n    },\n  };\n}\n"],"names":[],"mappings":"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"}