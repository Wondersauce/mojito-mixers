{"version":3,"file":"KnownTypeNamesRule.mjs.js","sources":["../../../../../../node_modules/graphql/validation/rules/KnownTypeNamesRule.mjs"],"sourcesContent":["import { didYouMean } from '../../jsutils/didYouMean.mjs';\nimport { suggestionList } from '../../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport {\n  isTypeDefinitionNode,\n  isTypeSystemDefinitionNode,\n  isTypeSystemExtensionNode,\n} from '../../language/predicates.mjs';\nimport { introspectionTypes } from '../../type/introspection.mjs';\nimport { specifiedScalarTypes } from '../../type/scalars.mjs';\n\n/**\n * Known type names\n *\n * A GraphQL document is only valid if referenced types (specifically\n * variable definitions and fragment conditions) are defined by the type schema.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-Spread-Type-Existence\n */\nexport function KnownTypeNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypesMap = schema ? schema.getTypeMap() : Object.create(null);\n  const definedTypes = Object.create(null);\n\n  for (const def of context.getDocument().definitions) {\n    if (isTypeDefinitionNode(def)) {\n      definedTypes[def.name.value] = true;\n    }\n  }\n\n  const typeNames = [\n    ...Object.keys(existingTypesMap),\n    ...Object.keys(definedTypes),\n  ];\n  return {\n    NamedType(node, _1, parent, _2, ancestors) {\n      const typeName = node.name.value;\n\n      if (!existingTypesMap[typeName] && !definedTypes[typeName]) {\n        var _ancestors$;\n\n        const definitionNode =\n          (_ancestors$ = ancestors[2]) !== null && _ancestors$ !== void 0\n            ? _ancestors$\n            : parent;\n        const isSDL = definitionNode != null && isSDLNode(definitionNode);\n\n        if (isSDL && standardTypeNames.includes(typeName)) {\n          return;\n        }\n\n        const suggestedTypes = suggestionList(\n          typeName,\n          isSDL ? standardTypeNames.concat(typeNames) : typeNames,\n        );\n        context.reportError(\n          new GraphQLError(\n            `Unknown type \"${typeName}\".` + didYouMean(suggestedTypes),\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\nconst standardTypeNames = [...specifiedScalarTypes, ...introspectionTypes].map(\n  (type) => type.name,\n);\n\nfunction isSDLNode(value) {\n  return (\n    'kind' in value &&\n    (isTypeSystemDefinitionNode(value) || isTypeSystemExtensionNode(value))\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,kBAAkB,CAAC,OAAO,EAAE;AAC5C,EAAE,MAAM,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC;AACrC,EAAE,MAAM,gBAAgB,GAAG,MAAM,GAAG,MAAM,CAAC,UAAU,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC9E,EAAE,MAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC3C;AACA,EAAE,KAAK,MAAM,GAAG,IAAI,OAAO,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE;AACvD,IAAI,IAAI,oBAAoB,CAAC,GAAG,CAAC,EAAE;AACnC,MAAM,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;AAC1C,KAAK;AACL,GAAG;AACH;AACA,EAAE,MAAM,SAAS,GAAG;AACpB,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;AACpC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;AAChC,GAAG,CAAC;AACJ,EAAE,OAAO;AACT,IAAI,SAAS,CAAC,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE;AAC/C,MAAM,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;AACvC;AACA,MAAM,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE;AAClE,QAAQ,IAAI,WAAW,CAAC;AACxB;AACA,QAAQ,MAAM,cAAc;AAC5B,UAAU,CAAC,WAAW,GAAG,SAAS,CAAC,CAAC,CAAC,MAAM,IAAI,IAAI,WAAW,KAAK,KAAK,CAAC;AACzE,cAAc,WAAW;AACzB,cAAc,MAAM,CAAC;AACrB,QAAQ,MAAM,KAAK,GAAG,cAAc,IAAI,IAAI,IAAI,SAAS,CAAC,cAAc,CAAC,CAAC;AAC1E;AACA,QAAQ,IAAI,KAAK,IAAI,iBAAiB,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;AAC3D,UAAU,OAAO;AACjB,SAAS;AACT;AACA,QAAQ,MAAM,cAAc,GAAG,cAAc;AAC7C,UAAU,QAAQ;AAClB,UAAU,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,SAAS;AACjE,SAAS,CAAC;AACV,QAAQ,OAAO,CAAC,WAAW;AAC3B,UAAU,IAAI,YAAY;AAC1B,YAAY,CAAC,cAAc,EAAE,QAAQ,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,cAAc,CAAC;AACtE,YAAY;AACZ,cAAc,KAAK,EAAE,IAAI;AACzB,aAAa;AACb,WAAW;AACX,SAAS,CAAC;AACV,OAAO;AACP,KAAK;AACL,GAAG,CAAC;AACJ,CAAC;AACD,MAAM,iBAAiB,GAAG,CAAC,GAAG,oBAAoB,EAAE,GAAG,kBAAkB,CAAC,CAAC,GAAG;AAC9E,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI;AACrB,CAAC,CAAC;AACF;AACA,SAAS,SAAS,CAAC,KAAK,EAAE;AAC1B,EAAE;AACF,IAAI,MAAM,IAAI,KAAK;AACnB,KAAK,0BAA0B,CAAC,KAAK,CAAC,IAAI,yBAAyB,CAAC,KAAK,CAAC,CAAC;AAC3E,IAAI;AACJ;;;;"}