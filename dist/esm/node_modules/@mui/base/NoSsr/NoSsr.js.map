{"version":3,"file":"NoSsr.js","sources":["../../../../../../node_modules/@mui/base/NoSsr/NoSsr.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\n/**\n * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\n *\n * This component can be useful in a variety of situations:\n * - Escape hatch for broken dependencies not supporting SSR.\n * - Improve the time-to-first paint on the client by only rendering above the fold.\n * - Reduce the rendering time on the server.\n * - Under too heavy server load, you can turn on service degradation.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction NoSsr(props) {\n  const {\n    children,\n    defer = false,\n    fallback = null\n  } = props;\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    if (!defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n  React.useEffect(() => {\n    if (defer) {\n      setMountedState(true);\n    }\n  }, [defer]); // We need the Fragment here to force react-docgen to recognise NoSsr as a component.\n\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: mountedState ? children : fallback\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? NoSsr.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * If `true`, the component will not only prevent server-side rendering.\n   * It will also defer the rendering of the children into a different screen frame.\n   * @default false\n   */\n  defer: PropTypes.bool,\n\n  /**\n   * The fallback content to display.\n   * @default null\n   */\n  fallback: PropTypes.node\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  NoSsr['propTypes' + ''] = exactProp(NoSsr.propTypes);\n}\n\nexport default NoSsr;"],"names":["_jsx"],"mappings":";;;;;;;;;;;;AAeA,SAAS,KAAK,CAAC,KAAK,EAAE;AACtB,EAAE,MAAM;AACR,IAAI,QAAQ;AACZ,IAAI,KAAK,GAAG,KAAK;AACjB,IAAI,QAAQ,GAAG,IAAI;AACnB,GAAG,GAAG,KAAK,CAAC;AACZ,EAAE,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAChE,EAAE,iBAAiB,CAAC,MAAM;AAC1B,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB,MAAM,eAAe,CAAC,IAAI,CAAC,CAAC;AAC5B,KAAK;AACL,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AACd,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;AACxB,IAAI,IAAI,KAAK,EAAE;AACf,MAAM,eAAe,CAAC,IAAI,CAAC,CAAC;AAC5B,KAAK;AACL,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AACd;AACA,EAAE,oBAAoBA,GAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;AAC3C,IAAI,QAAQ,EAAE,YAAY,GAAG,QAAQ,GAAG,QAAQ;AAChD,GAAG,CAAC,CAAC;AACL,CAAC;AACD;AACA,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAG,KAAK,CAAC,SAAS;AACvD;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,QAAQ,EAAE,SAAS,CAAC,IAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,KAAK,EAAE,SAAS,CAAC,IAAI;AACvB;AACA;AACA;AACA;AACA;AACA,EAAE,QAAQ,EAAE,SAAS,CAAC,IAAI;AAC1B,CAAC,GAAG,KAAK,CAAC,CAAC;AACX;AACA,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;AAC3C;AACA,EAAE,KAAK,CAAC,WAAW,GAAG,EAAE,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AACvD;;;;"}