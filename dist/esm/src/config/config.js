// Dev / Debug Stuff:
const DEV_DEBUG_COUNTER_EXPIRATION_MS = 1000;
const DEV_DEBUG_COUNTER_CLICKS_NEEDED = 16;
const DEV_DEBUG_ENABLED_KEY = "DEV_DEBUG_ENABLED";
// Invoice / Reservation:
const RESERVATION_COUNTDOWN_FROM_MIN = 15;
const RESERVATION_COUNTDOWN_FROM_MS = RESERVATION_COUNTDOWN_FROM_MIN * 60 * 1000;
const RESERVATION_COUNTDOWN_REFRESH_RATE_MS = 1000;
// Purchase:
const PURCHASING_MIN_WAIT_MS = 3000; // PurchasingView will be visible for at least 3 seconds.
const PURCHASING_MESSAGES_INTERVAL_MS = 5000; // PurchasingView will loop over the following messages, one every 5 seconds.
const PURCHASING_MESSAGES_DEFAULT = [
    "Muddling mint and lime.",
    "Topping up with club soda.",
    "Adding rum, lime juice and ice.",
    "Shaking things up!",
];
const PAYMENT_CREATION_INTERVAL_MS = 5000; // (5 sec) Polling interval for GetPaymentMethodStatus.
const PAYMENT_CREATION_MAX_WAIT_MS = 120000; // (2 min) Max. wait time for GetPaymentMethodStatus (to get status === "complete").
const PAYMENT_CREATION_MIN_WAIT_MS = 5000; // (5 sec) Min. time a user would be stuck in the PurchasingView.
const PAYMENT_CREATION_TIMEOUT_MS = PAYMENT_CREATION_MAX_WAIT_MS * 2; // (4 min) Max. time a user would be stuck in the PurchasingView before throwing an error.
const PAYMENT_NOTIFICATION_INTERVAL_MS = 2500; // (2.5 sec) Polling interval for GetPaymentNotificationQuery in PurchasingView.
// Plaid:
const PLAID_STORAGE_EXPIRATION_MS = 1000 * 60 * 15; // 15 minutes (Plaid requires filling in some data).
const PLAID_OAUTH_FLOW_INFO_KEY = "PLAID_OAUTH_FLOW_INFO";
const PLAID_OAUTH_FLOW_RECEIVED_REDIRECT_URI_KEY = "PLAID_OAUTH_FLOW_RECEIVED_REDIRECT_URI";
const PLAID_OAUTH_FLOW_STATE_USED_KEY = "PLAID_OAUTH_FLOW_STATE_USED";
const PLAID_OAUTH_FLOW_URL_SEARCH = "?oauth_state_id=";
// 3DS:
const THREEDS_REDIRECT_DELAY_MS = 1000; // (1 sec) Small delay before redirecting users to 3DS' page.
const THREEDS_STORAGE_EXPIRATION_MS = 1000 * 60 * 7; // 7 minutes (3DS will also ask for some information (in PROD only)).
const THREEDS_FLOW_INFO_KEY = "THREEDS_FLOW_INFO";
const THREEDS_FLOW_RECEIVED_REDIRECT_URI_KEY = "THREEDS_FLOW_RECEIVED_REDIRECT_URI";
const THREEDS_FLOW_STATE_USED_KEY = "THREEDS_FLOW_STATE_USED";
const THREEDS_FLOW_URL_SEARCH = "?paymentId=";
const THREEDS_SUCCESS_REDIRECT_DELAY_MS = 5000; // Success page redirects users automatically after 5 seconds.

export { DEV_DEBUG_COUNTER_CLICKS_NEEDED, DEV_DEBUG_COUNTER_EXPIRATION_MS, DEV_DEBUG_ENABLED_KEY, PAYMENT_CREATION_INTERVAL_MS, PAYMENT_CREATION_MAX_WAIT_MS, PAYMENT_CREATION_MIN_WAIT_MS, PAYMENT_CREATION_TIMEOUT_MS, PAYMENT_NOTIFICATION_INTERVAL_MS, PLAID_OAUTH_FLOW_INFO_KEY, PLAID_OAUTH_FLOW_RECEIVED_REDIRECT_URI_KEY, PLAID_OAUTH_FLOW_STATE_USED_KEY, PLAID_OAUTH_FLOW_URL_SEARCH, PLAID_STORAGE_EXPIRATION_MS, PURCHASING_MESSAGES_DEFAULT, PURCHASING_MESSAGES_INTERVAL_MS, PURCHASING_MIN_WAIT_MS, RESERVATION_COUNTDOWN_FROM_MIN, RESERVATION_COUNTDOWN_FROM_MS, RESERVATION_COUNTDOWN_REFRESH_RATE_MS, THREEDS_FLOW_INFO_KEY, THREEDS_FLOW_RECEIVED_REDIRECT_URI_KEY, THREEDS_FLOW_STATE_USED_KEY, THREEDS_FLOW_URL_SEARCH, THREEDS_REDIRECT_DELAY_MS, THREEDS_STORAGE_EXPIRATION_MS, THREEDS_SUCCESS_REDIRECT_DELAY_MS };
//# sourceMappingURL=config.js.map
